#!/usr/bin/env node

'use strict';

const Config = require('bcfg');
const app = require('../lib/app');

const ports = {
  main: 12037,
  testnet: 13037,
  regtest: 14037,
  simnet: 15037
};

class CLI {
  constructor() {
    this.config = new Config('hfuzz', {
      alias: {
        'n': 'network',
      }
    });

    this.config.load({
      argv: true,
      env: true
    });

    this.config.open('hfuzz.conf');

    this.network = this.config.str('network', 'main');

    this.app = app;
  }

  log(json) {
    if (typeof json === 'string')
      return console.log.apply(console, arguments);
    return console.log(JSON.stringify(json, null, 2));
  }

  async open() {
    await this.app(this.config);
  }

  async destroy() {
    ;
  }
}

(async () => {
  const cli = new CLI();
  try {
    await cli.open();
  } catch (e) {
    debugger;
    console.log(e)
  }
  await cli.destroy();
})().catch((err) => {
  console.error(err.stack);
  process.exit(1);
});
